Day1

CREATE TABLE driver_details(
driver_id INT PRIMARY KEY AUTO_INCREMENT,
driver_name VARCHAR(50) NOT NULL,
contact_no BIGINT(10) NOT NULL UNIQUE, 
license_number VARCHAR(50), 
date_of_registration DATE NOT NULL,
average_rating DECIMAL(2,1) NOT NULL
)
AUTO_INCREMENT=1001;


CREATE TABLE vehicle_details(
car_registration VARCHAR(50) PRIMARY KEY,
driver_id INT NOT NULL,
vehicle_model VARCHAR(50) NOT NULL,
vehicle_type VARCHAR(50) NOT NULL,
seating_capacity INT NOT NULL,
charges_per_hour DECIMAL(6,2) NOT NULL DEFAULT 0,
CONTRAINT driver_fk FOREIGN KEY (driver_id) REFERENCES driver_details (driver_id)
);


CREATE TABLE customer_details(
customer_id INT PRIMARY KEY AUTO_INCREMENT, 
customer_name VARCHAR(50) NOT NULL,
date_of_registration DATE NOT NULL,
customer_phone BIGINT(10) NOT NULL UNIQUE,
customer_address TEXT,
credit_points int NOT NULL DEFAULT 0,
wallet 	DECIMAL(6,2) DEFAULT 0
)
AUTO_INCREMENT=1;


CREATE TABLE booking_details(
booking_id VARCHAR(10) PRIMARY KEY,
customer_id INT NOT NULL,
driver_id INT NOT NULL,
date_of_booking TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
source VARCHAR(50) NOT NULL,
destination VARCHAR(50) NOT NULL,
type_of_travel ENUM('polo','solo') NOT NULL,
number_of_persons INT,
booking_status ENUM('waiting','travelling','completed','cancelled') NOT NULL DEFAULT 'waiting',
CONSTRAINT customer_fk FOREIGN KEY (customer_id) REFERENCES customer_details (customer_id),
CONSTRAINT driver_fk FOREIGN KEY (driver_id) REFERENCES driver_details (driver_id)
);


CREATE TABLE coupon_details(
coupon_code VARCHAR(50) PRIMARY KEY,
expiry_date DATE NOT NULL,
description TEXT,    	 
discount_percentage FLOAT NOT NULL
);


CREATE TABLE payment_details(
payment_id VARCHAR(10) PRIMARY KEY,
booking_id VARCHAR(10) NOT NULL,
journey_duration INT NOT NULL,
waiting_duration INT NOT NULL DEFAULT 0,
coupon_code VARCHAR(50),
fare DECIMAL(6,2) NOT NULL DEFAULT 0,
payment_type ENUM('cash','wallet','upi') NOT NULL DEFAULT 'wallet',
driver_rating FLOAT,
feedback TEXT,
CONSTRAINT booking_fk FOREIGN KEY (booking_id) REFERENCES booking_details(booking_id),
CONSTRAINT coupon_fk FOREIGN KEY (coupon_code) REFERENCES coupon_details (coupon_code)
);

-------------------------------------------------------------

DAY2

Exercise 8:
SELECT Prodid,Pdesc,Category,Discount 
FROM Product 
WHERE Pdesc IS NULL;

Exercise 9:
SELECT Prodid,Pdesc,Category,Discount 
FROM Product 
WHERE Category='Apparel' AND Discount>5;

Exercise 19:
UPDATE Product SET Price=50 
WHERE Category='Apparel' AND Pdesc='Trouser';

Exercise 20:
UPDATE Salesman SET Sname='Jenny',Location='Bristol' 
WHERE Sid=3;

Exercise 24:
SELECT Prodid,SUBSTR(Pdesc,1,5) AS PDESC_FIVE,category 
FROM Product;

Exercise 25:
SELECT COUNT(Saleid)AS SALE_COUNT
FROM Sale
WHERE MONTHS_BETWEEN(sysdate,Sldate)<40;

Exercise 26:
SELECT NVL(Pdesc,'No Description') AS PDESC,Discount 
FROM Product;

Exercise 27:
SELECT Prodid,Category,Price,Discount 
FROM Product 
ORDER BY Category DESC,Price ASC;

Exercise 10:
SELECT Prodid,Category,Discount 
FROM Product 
WHERE Category IN ('Sports','Apparel') 
ORDER BY Category,Discount;

Exercise 64:
SELECT COUNT(Qtyonhand) AS NOOFITEMS FROM Item;

Exercise 65:
SELECT Orderid, months_between(Orderdate,Pymtdate)"No of Months" 
FROM Orders;

Exercise 66:
SELECT SUM(Quotedprice) AS TotalPrice
FROM Quotation
WHERE TO_CHAR(Qdate,'MM')=06 and Qstatus='Accepted';

Exercise 11:
SELECT Prodid,SUM(Quantity) AS QTY_SOLD
FROM Saledetail
WHERE Quantity>1
GROUP BY Prodid
HAVING COUNT(Quantity)>1;

Exercise 41:
SELECT TO_CHAR(Qdate,'Month') AS MONTH,COUNT(Quotationid) AS QUOTATIONCOUNT
FROM Quotation
GROUP BY TO_CHAR(Qdate,'Month');

Exercise 46:
SELECT Pymtmode,COUNT(Orderid) AS PYMTCOUNT 
FROM Orders WHERE TO_CHAR(Pymtdate,'YYYY')<2015 
GROUP BY Pymtmode 
HAVING COUNT(*)>1;


***********************************
5,16,62 are wrong
Day 3

1.SELECT h.hotel name FROM hotel h INNER JOIN hotel_room_details r ON h.hotel_id=r.hotel_id where room_type="Deluxe Room AC";

2.SELECT SUM(r.room_price) FROM hotels h INNER JOIN hotel_room_details ON h.hotel id=r.hotel id GROUP BY h.hotel_id;

3.SELECT COUNT(b.booking id) FROM USER u INNER JOIN booking b ON u.user_email=b.booking user_email GROUP BY u.user_name HAVING b.booking_checkin=2017;

4.SELECT COUNT(r.room id) FROM hotel h inner join hotel_room_details ON h.hotel_id=r.hotel id WHERE r.room price<10000; 

5.SELECT H.hotel_name,B.booking_id FROM HOTEL H JOIN hotel_room_details R ON H.hotel_id=R.hotel_id RIGHT OUTER JOIN booking B ON R.room_id=B.booking_room_id B.booking_id IS NULL;


DBMS Part-1:

12: SELECT Sname FROM Quotation GROUP BY Sname HAVING AVG(Quotedprice)>500 AND Qstatus='Closed';

17:SELECT I.Itemcode, I.Descr, I.Category, Q.Quotedprice FROM Item I INNER JOIN Quotation Q ON I.Itemcode Q.Itemcode WHERE Q.Qstatus='Accepted';

Self Join, Outer Join:

Assignment 15:SELECT e.Ename, v.Vehiclename FROM Emp e LEFT JOIN Empvehicle ev ON e.Empno=ev.Empno LEFT JOIN Vehicle v ON ev.Vehicleid=v.Vehicleid;

Assignment 16: SELECT I.Itemcode,Descr,NVL(TO_CHAR(Qtyavailable),'N.A.') Qtyavailable FROM Item I LEFT OUTER JOIN Retailstock R1 ON R1.Itemcode=I.Itemcode AND R1.Roid='R1001';

Exercise 16: SELECT p1.prodid,p1.category, p2.price FROM Product p1 INNER JOIN Product p2 ON p1.prodid=p2.prodid WHERE pl.price=p2.price; ----> not working in oracle 

Exercise 18:No manager id column present...

Exercise 60: SELECT s.Sname FROM Salesman s INNER JOIN Sale sa ON s.sid=sa.sid GROUP BY s.sname HAVING COUNT(sa.saleid)>=2;

Exercise 62: SELECT sm.sid, sm.sname, sm.location FROM Salesman sm INNER JOIN Sale s ON sm.sid=s.sid INNER JOIN Saledetail sd ON s.saleid=sd.saleid INNER JOIN product p ON sd.prodid=p.prodid GROUP BY sm.sid HAVING SUM(p.price*sd.quantity;

Exercise 63: SELECT prodid, category, pdesc, price FROM Product WHERE price IN(SELECT MAX(price) FROM product group by category); 

Exercise 64: SELECT sm.sname FROM Salesman sm Left JOIN Sale s ON sm.sid=s.sid where s.saleid IS NULL;
